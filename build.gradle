plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'io.freefair.lombok' version '8.4'
	id 'cz.habarta.typescript-generator' version '3.2.1263'
	id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = 'com.teddyversion'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

sourceSets {
    dbTest {
		java.srcDir '$projectDir/src/dbTest/java'
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    dbTestImplementation.extendsFrom testImplementation
    dbTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.assertj:assertj-core'
}

tasks.named('test') {
	useJUnitPlatform()
}

generateTypeScript {
    jsonLibrary = 'jackson2'
    classPatterns = [
        'com.teddyversion.musicService.entity.*'
    ]
    outputKind = 'module'
}

jib {
	from.image = 'eclipse-temurin:21-jre'
	to {
		image = 'us-west4-docker.pkg.dev/teddyversion/docker/musicservice'
		credHelper = 'gcloud'
	}
}

tasks.register('dbTest', Test) {
    description = 'Runs database integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.dbTest.output.classesDirs
    classpath = sourceSets.dbTest.runtimeClasspath
    shouldRunAfter test

    useJUnitPlatform()

    testLogging {
        events "passed"
    }
}

check.dependsOn dbTest
